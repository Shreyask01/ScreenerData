<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-19T14:17:54 IST" name="Default suite" finished-at="2022-03-19T14:19:00 IST" duration-ms="65403">
    <groups>
    </groups>
    <test started-at="2022-03-19T14:17:54 IST" name="Default test" finished-at="2022-03-19T14:19:00 IST" duration-ms="65403">
      <class name="testCases.LargeCapTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.LargeCapTest@6f152006]" started-at="2022-03-19T14:17:54 IST" name="setUp" finished-at="2022-03-19T14:17:54 IST" duration-ms="750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="loginToScreen()[pri:0, instance:testCases.LargeCapTest@6f152006]" started-at="2022-03-19T14:17:54 IST" name="loginToScreen" finished-at="2022-03-19T14:17:59 IST" duration-ms="4412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToScreen -->
        <test-method signature="largeCapTest(java.util.Hashtable)[pri:1, instance:testCases.LargeCapTest@6f152006]" started-at="2022-03-19T14:17:59 IST" name="largeCapTest" data-provider="dp" finished-at="2022-03-19T14:18:10 IST" duration-ms="11236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{RowNum=2, PE=, profit 5=, ROE=, promoter hold=, ROCE=, comment=, Debt to eq=, Stock=HDFC bank, rowNum=2, market cap=, sales 5=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeCapTest -->
        <test-method is-config="true" signature="loginToScreen()[pri:0, instance:testCases.LargeCapTest@6f152006]" started-at="2022-03-19T14:18:10 IST" name="loginToScreen" finished-at="2022-03-19T14:18:13 IST" duration-ms="2806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToScreen -->
        <test-method signature="largeCapTest(java.util.Hashtable)[pri:1, instance:testCases.LargeCapTest@6f152006]" started-at="2022-03-19T14:18:13 IST" name="largeCapTest" data-provider="dp" finished-at="2022-03-19T14:18:46 IST" duration-ms="33171" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{RowNum=3, PE=, profit 5=, ROE=, promoter hold=, ROCE=, comment=, Debt to eq=, Stock=TCS, rowNum=3, market cap=, sales 5=}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[contains(text(),'Market Cap')]/following-sibling::span/span"}
  (Session info: chrome=99.0.4844.51)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-DHR1V4R7', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.51, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\shrey\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64760}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: add8e454a904d7788ad9bd89f2a64eb1
*** Element info: {Using=xpath, value=//span[contains(text(),'Market Cap')]/following-sibling::span/span}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[contains(text(),'Market Cap')]/following-sibling::span/span"}
  (Session info: chrome=99.0.4844.51)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-DHR1V4R7', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.51, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\shrey\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64760}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: add8e454a904d7788ad9bd89f2a64eb1
*** Element info: {Using=xpath, value=//span[contains(text(),'Market Cap')]/following-sibling::span/span}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at testbase.TestBase.getTextFromElement(TestBase.java:185)
at pom.LargeCap.maketCap(LargeCap.java:29)
at testCases.LargeCapTest.largeCapTest(LargeCapTest.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeCapTest -->
        <test-method is-config="true" signature="loginToScreen()[pri:0, instance:testCases.LargeCapTest@6f152006]" started-at="2022-03-19T14:18:46 IST" name="loginToScreen" finished-at="2022-03-19T14:18:49 IST" duration-ms="2953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginToScreen -->
        <test-method signature="largeCapTest(java.util.Hashtable)[pri:1, instance:testCases.LargeCapTest@6f152006]" started-at="2022-03-19T14:18:49 IST" name="largeCapTest" data-provider="dp" finished-at="2022-03-19T14:19:00 IST" duration-ms="10775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{RowNum=4, PE=, profit 5=, ROE=, promoter hold=, ROCE=, comment=, Debt to eq=, Stock=Reliance, rowNum=4, market cap=, sales 5=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largeCapTest -->
      </class> <!-- testCases.LargeCapTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
